# ---
# name: rhel8.10 test

# on:
#   issue_comment:
#     types:
#       - created

# jobs:
#   pr-info:
#     if: ${{ github.event.issue.pull_request &&
#             (endsWith(github.event.comment.body, '/test-rhel810') ||
#             endsWith(github.event.comment.body, '/test-rhel810-t1') ||
#             endsWith(github.event.comment.body, '/test-rhel810-t2')) }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Query author repository permissions
#         uses: octokit/request-action@v2.x
#         id: user_permission
#         with:
#           route: GET /repos/${{ github.repository }}/collaborators/${{ github.event.sender.login }}/permission
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#       - name: Check if user does have correct permissions
#         if: contains('admin write', fromJson(steps.user_permission.outputs.data).permission)
#         id: check_user_perm
#         run: |
#           echo "User '${{ github.event.sender.login }}' has permission '${{ fromJson(steps.user_permission.outputs.data).permission }}' allowed values: 'admin', 'write'"
#           echo "allowed_user=true" >> $GITHUB_OUTPUT

#       - name: Get information for pull request
#         uses: octokit/request-action@v2.x
#         id: pr-api
#         with:
#           route: GET /repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#     outputs:
#       allowed_user: ${{ steps.check_user_perm.outputs.allowed_user }}
#       sha: ${{ fromJson(steps.pr-api.outputs.data).head.sha }}
#       ref: ${{ fromJson(steps.pr-api.outputs.data).head.ref }}
#       repo_url: ${{ fromJson(steps.pr-api.outputs.data).head.repo.html_url }}

#   rhel94-t1:
#     needs: pr-info
#     if: ${{ needs.pr-info.outputs.allowed_user == 'true' && github.event.issue.pull_request &&
#             (endsWith(github.event.comment.body, '/test-rhel94') ||
#             endsWith(github.event.comment.body, '/test-rhel94-t1')) }}
#     continue-on-error: true
#     runs-on: ubuntu-latest
#     env:
#       STATUS_NAME: rhel94-t1

#     steps:
#       - name: Clone repository
#         uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4
#         with:
#           ref: ${{ needs.pr-info.outputs.sha }}
#           fetch-depth: 0

#       - name: Run the tests
#         uses: sclorg/testing-farm-as-github-action@v1
#         with:
#           compose: RHEL-9.4.0-Nightly
#           arch: x86_64
#           api_key: ${{ secrets.TF_API_KEY }}
#           git_url: ${{ needs.pr-info.outputs.repo_url }}
#           git_ref: ${{ needs.pr-info.outputs.ref }}
#           tmt_context: "arch=x86_64"
#           update_pull_request_status: true
#           pull_request_status_name: "rhel94-t1"
#           tf_scope: private

#   rhel94-t2:
#     needs: pr-info
#     if: ${{ needs.pr-info.outputs.allowed_user == 'true' && github.event.issue.pull_request &&
#             (endsWith(github.event.comment.body, '/test-rhel94') ||
#             endsWith(github.event.comment.body, '/test-rhel94-t2')) }}
#     continue-on-error: true
#     runs-on: ubuntu-latest

#     steps:
#       - name: Clone repository
#         uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4
#         with:
#           ref: ${{ needs.pr-info.outputs.sha }}
#           fetch-depth: 0

#       - name: Run the tests
#         uses: sclorg/testing-farm-as-github-action@v1
#         with:
#           compose: RHEL-9.4.0-Nightly
#           arch: x86_64
#           api_key: ${{ secrets.TF_API_KEY }}
#           git_url: ${{ needs.pr-info.outputs.repo_url }}
#           git_ref: ${{ needs.pr-info.outputs.ref }}
#           tmt_context: "arch=x86_64"
#           update_pull_request_status: true
#           pull_request_status_name: "rhel94-t2"
#           tmt_plan_regex: "rhel94"
#           tf_scope: private
#           variables: "TEST_OS=rhel-9-4;ARCH=x86_64"